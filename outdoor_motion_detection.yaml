- alias: Capture outdoor motion
  mode: parallel
  trigger:
    - platform: state
      entity_id:
        - binary_sensor.line_crossing_side_passage
        - binary_sensor.line_crossing_kitchen_side
        - binary_sensor.line_crossing_porch_roof
        - binary_sensor.line_crossing_kitchen_roof
        - binary_sensor.line_crossing_back_garden
      from: 'off'
      to: 'on'
  condition:
    alias: Outdoor photo or video notify is enabled
    condition: or
    conditions:
    - condition: state
      entity_id: input_boolean.outdoor_motion_notify_photo
      state: 'on'
    - condition: state
      entity_id: input_boolean.outdoor_motion_notify_video
      state: 'on'
  action:
    - alias: Set up variables
      variables:
        camera_name: "{{ trigger.entity_id[28:] }}"
        camera_entity: "camera.{{ camera_name }}"
        camera_friendly_name: "{{ state_attr(camera_entity, 'friendly_name') }}"
        timestamp: "{{ now().strftime('%d-%m-%Y_%H-%M-%S') }}"
        snapshot_filename: "motion.{{ camera_name }}.{{ timestamp }}.jpg"
        clip_filename: "motion.{{ camera_name }}.{{ timestamp }}.mp4"
        message: "Motion in {{ camera_friendly_name }}"
  
    - choose:
      - conditions:
          - condition: state
            entity_id: input_boolean.outdoor_motion_notify_photo
            state: 'on'
        sequence:
          - alias: Create a snapshot
            service: camera.snapshot
            target:
              entity_id: "{{ camera_entity }}"
            data:
              filename: "/media/camera/snapshots/{{ snapshot_filename }}"
                  
          - alias: Send a photo to Telegram
            service: telegram_bot.send_photo
            data:
              target:
                - !secret telegram_chat_id_alexey
                - !secret telegram_chat_id_marina
              file: "/media/camera/snapshots/{{ snapshot_filename }}"
              caption: "{{ message }}"

          - alias: Send a notification to companion apps
            service: notify.mobile_devices
            data:
              message: "{{ message }}"
              data:
                image: "/media/local/camera/snapshots/{{ snapshot_filename }}"

      - conditions:
          - condition: state
            entity_id: input_boolean.outdoor_motion_notify_video
            state: 'on'
        sequence:
          - alias: Record clip
            service: camera.record
            data:
              entity_id: "{{ camera_entity }}"
              filename: "/media/camera/clips/{{ clip_filename }}"
              lookback: 10
              duration: 15
          
          - alias: Wait for clip file to be created
            wait_for_trigger:
              - platform: event
                event_type: folder_watcher
                event_data:
                  event_type: created
                  file: "{{ clip_filename }}"
            timeout:
              seconds: 30
            continue_on_timeout: false

          - alias: Wait 25 secs for clip to be recorded
            delay:
              seconds: 25

          - alias: Send a notification to Telegram
            service: telegram_bot.send_video
            data:
              target:
                - !secret telegram_chat_id_alexey
                - !secret telegram_chat_id_marina
              file: "/media/camera/clips/{{ clip_filename }}"
              caption: "{{ message }}"

          - alias: Send a notification to companion apps
            service: notify.mobile_devices
            data:
              message: "{{ message }}"
              data:
                video: "/media/local/camera/clips/{{ clip_filename }}"